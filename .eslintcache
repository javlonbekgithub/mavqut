[{"/media/javlonbek/extra/projects/reactjs/mavqut/src/reportWebVitals.js":"1","/media/javlonbek/extra/projects/reactjs/mavqut/src/App.js":"2","/media/javlonbek/extra/projects/reactjs/mavqut/src/index.js":"3","/media/javlonbek/extra/projects/reactjs/mavqut/src/languages/index.js":"4","/media/javlonbek/extra/projects/reactjs/mavqut/src/pages/main/index.js":"5","/media/javlonbek/extra/projects/reactjs/mavqut/src/pages/main/constants.js":"6","/media/javlonbek/extra/projects/reactjs/mavqut/src/pages/main/animations-functions.js":"7"},{"size":362,"mtime":1606719233414,"results":"8","hashOfConfig":"9"},{"size":144,"mtime":1606910078316,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1606719233414,"results":"11","hashOfConfig":"9"},{"size":174,"mtime":1606910099337,"results":"12","hashOfConfig":"9"},{"size":11757,"mtime":1607163335620,"results":"13","hashOfConfig":"9"},{"size":745,"mtime":1607087321927,"results":"14","hashOfConfig":"9"},{"size":192,"mtime":1606996473670,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"15am6g7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/javlonbek/extra/projects/reactjs/mavqut/src/reportWebVitals.js",[],["33","34"],"/media/javlonbek/extra/projects/reactjs/mavqut/src/App.js",[],"/media/javlonbek/extra/projects/reactjs/mavqut/src/index.js",[],["35","36"],"/media/javlonbek/extra/projects/reactjs/mavqut/src/languages/index.js",[],"/media/javlonbek/extra/projects/reactjs/mavqut/src/pages/main/index.js",["37","38","39","40","41","42","43","44"],"import React, { useEffect, useState, useRef } from 'react'\n// import { useReadyStateEffect } from \"react-ready-state-effect\"\nimport styles from './index.module.sass'\nimport background from '../../assets/img/background.png'\nimport clouds from '../../assets/img/clouds.png'\nimport way from '../../assets/img/way.png'\nimport moon from '../../assets/img/moon.png'\nimport mosque from '../../assets/img/mosque.png'\nimport towers from '../../assets/img/towers.png'\nimport littleTowers from '../../assets/img/little-towers.png'\nimport download from '../../assets/icon/download.ico'\nimport phone from '../../assets/icon/phone.ico'\nimport email from '../../assets/icon/email.ico'\nimport question from '../../assets/icon/question.ico'\nimport arrowLeft from '../../assets/icon/arrowLeft.ico'\nimport PulseLoader from \"react-spinners/PulseLoader\"\nimport { lang } from '../../languages'\n// import { screenWidth } from './constants'\nimport { moveCenterMosque } from './animations-functions'\nimport { detailsText, detailsTextTitle } from './constants'\n\n\nexport const Main = () => {\n\n    const [animation, setAnimation] = useState(false)\n\n    const [counterImg, setCounterImg] = useState(1)\n\n    const [spinner, setSpinner] = useState(true)\n\n    const mosqueElement = useRef(null)\n\n    const towersElement = useRef(null)\n\n    const littleTowersElement = useRef(null)\n\n    const wayElement = useRef(null)\n\n    const moonElement = useRef(null)\n\n    const [mosqueStyle, setMosqueStyle] = useState({\n        transform: ''\n        // right: null\n        // transition: 'ease-in',\n        // transitionDuration: '1s'\n    })\n\n    const [towersStyle, setTowersStyle] = useState({\n        transform: ''\n        // right: null\n        // transition: 'ease-in',\n        // transitionDuration: '1s'\n    })\n\n    const [littleTowersStyle, setLittleTowersStyle] = useState({\n        transform: ''\n        // right: null\n        // transition: 'ease-in',\n        // transitionDuration: '1s'\n    })\n\n    const [backgroundStyle, setBackgoundStyle] = useState({\n        transform: ''\n    })\n\n    const [cloudsStyle, setCloudsStyle] = useState({\n        transform: ''\n    })\n\n    const [wayStyle, setWayStyle] = useState({\n        transform: ''\n    })\n\n    const [moonStyle, setMoonStyle] = useState({\n        transform: ''\n    })\n\n    const [detailsTextToggle, setDetailsTextToggle] = useState(false)\n\n    const [toggleHeaderFooter, setToggleHeaderFooter] = useState(false)\n\n    useEffect (() => {\n        setTimeout(() => {\n            setSpinner(false)\n            setTimeout(() => {\n                setToggleHeaderFooter(true)\n            }, 7000)\n        }, 1000)\n    },[])\n\n\n\n    // useReadyStateEffect(() => setSpinner(false),[])\n\n    const handleLoadImage = () => {\n        setCounterImg(counterImg + 1)\n        counterImg === 7 && setAnimation(true)\n    }\n\n    const handleDetails = () => {\n        const mosqueCenter = moveCenterMosque(mosqueElement)\n        setToggleHeaderFooter(false)\n        setMosqueStyle({transform: `translate(-${mosqueCenter}px, 0`})\n        setTowersStyle({transform: `translate(-${mosqueCenter}px, 0`})\n        setLittleTowersStyle({transform: `translate(-${mosqueCenter}px, 0`})\n        setTimeout(() => {\n            setWayStyle({transform: `scale(1.5, 1.0) translate(0px, 20px)`})\n            setBackgoundStyle({transform: 'scale(1.4)'})\n            setCloudsStyle({transform: 'scale(2.5)'})\n            setTowersStyle({transform: `translate(-${mosqueCenter}px, 120px)`})\n            setLittleTowersStyle({transform: `translate(-${mosqueCenter}px, 100px`})\n        }, 1000)\n        setTimeout(() => {\n            setMosqueStyle({transform: `scale(0.7) translate(-${mosqueCenter * 1.4}px, 100px`})\n            setTowersStyle({transform: `scale(0.7) translate(-${mosqueCenter * 1.4}px, 200px`})\n            setLittleTowersStyle({transform: `scale(0.7) translate(-${mosqueCenter * 0.8}px, 200px`})\n        }, 2000)\n        setTimeout(() => {\n            setMosqueStyle({transform: `scale(0.7) translate(-${mosqueCenter * 1.4}px, -5px`})\n        }, 3000)\n        setTimeout(() => {\n            setMosqueStyle({transform: `scale(0.7) translate(-${mosqueCenter * 1.4}px, 70px`})\n            setTowersStyle({transform: `scale(0.7) translate(-${mosqueCenter * 1.4}px, 280px`})\n            // setLittleTowersStyle({transform: `scale(0.7) translate(-${mosqueCenter * 1.4}px, 100px`})\n            setWayStyle({transform: `scale(2.0, 1.0) translate(0px, 40px)`})\n            setMoonStyle({transform: 'translate(700px, -700px)'})\n        }, 4000)\n        setTimeout(() => {\n            setMosqueStyle({transform: `scale(0.5) translate(-${mosqueCenter * 2}px, 200px`})\n            setTowersStyle({transform: `scale(0.5) translate(-${mosqueCenter * 2}px, 460px`})\n            setLittleTowersStyle({transform: `scale(0.5) translate(-${mosqueCenter}px, 300px`})\n            setBackgoundStyle({transform: 'scale(1.7)'})\n            setWayStyle({transform: `scale(3.0, 1.0) translate(0px, 80px)`})\n        }, 5000)\n        setTimeout(() => {\n            setDetailsTextToggle(true)\n        }, 6000);\n    }\n\n    const handleDetailsToggle = () => {\n        setDetailsTextToggle(false)\n        reset()\n    }\n\n    const reset = () => {\n        setMosqueStyle({transform: `translate(-${0}px, 0`})\n        setTowersStyle({transform: `translate(-${0}px, 0`})\n        setBackgoundStyle({transform: 'scale(1.0)'})\n        setCloudsStyle({transform: 'scale(1.0)'})\n        setTowersStyle({transform: 'scale(1.0) translate(0, 0)'})\n        setWayStyle({transform: `scale(1.0) translate(0px, 0px)`})\n        setMoonStyle({transform: 'translate(0px, 0px)'})\n        setLittleTowersStyle({transform: `translate(-0, 0`})\n        setToggleHeaderFooter(true)\n        // setDetailsTextToggle(false)\n    }\n\n    return (\n        <div className = {styles.mainCont}>\n            {spinner ? <div className = {styles.spinnerCont}>\n                 <PulseLoader\n                    size={15}\n                    color={\"#123abc\"}\n                    loading={spinner}\n                /> \n                loading\n            </div>\n            :<div className = {styles.cont}>\n                <div className = {styles.headerCont}>\n                    <div className = {!toggleHeaderFooter ? styles.headerButtonCont : `${styles.headerButtonCont} ${styles.headerButtonAnime}`}>\n                        <div className = {styles.headerAboutUs}>{lang.main.aboutUs}</div>\n                        <div className = {styles.headerLetsgo}>{lang.main.letsgo}</div>\n                    </div>\n                </div>\n                <button style = {{position: 'absolute', top: 0, left: 0, zIndex: 3}} onClick = {reset}>reset</button>\n                <div className = {!detailsTextToggle ? styles.detailsTextCont : `${styles.detailsTextCont} ${styles.opacity}`}>\n                    <div>\n                        <img \n                            onClick = {handleDetailsToggle} \n                            className = {!detailsTextToggle ? styles.detailsArrowLeft : `${styles.detailsArrowLeft} ${styles.opacity}`} \n                            src = {arrowLeft} \n                            alt = 'back'\n                        />\n                    </div>\n                    <div className = {!detailsTextToggle ? styles.detailsText : `${styles.detailsText} ${styles.opacity}`}>\n                        <div className = {styles.detailsTextTitle}>{detailsTextTitle}</div>\n                        <div className = {styles.detailsTextContent}>{detailsText}</div>\n                    </div>\n                </div>\n                <img \n                    className = {!animation ? styles.backgroundImg : `${styles.backgroundImg} ${styles.backgroundImgAnime}`} \n                    alt = 'img' \n                    src = {background}\n                    style = {backgroundStyle}\n                    onLoad = {handleLoadImage}\n                />\n                <img \n                    className = {!animation ? styles.clouds : `${styles.clouds} ${styles.cloudsAnime}`} \n                    alt = 'img' \n                    src = {clouds}\n                    style = {cloudsStyle}\n                    onLoad = {handleLoadImage}\n                />\n                <img \n                    className = {styles.way} \n                    alt = 'img' \n                    src = {way}\n                    style = {wayStyle}\n                    ref = {wayElement}\n                    onLoad = {handleLoadImage}\n                />\n                <div className = { styles.mosqueTowersCont}>\n                    <img \n                        className = {!animation ? styles.moon : `${styles.moon} ${styles.moonAnime}`} \n                        alt = 'img' \n                        src = {moon} \n                        style = {moonStyle}\n                        ref = {moonElement}\n                        onLoad = {handleLoadImage}\n                    />\n                    <img \n                        className = {!animation ? styles.towers : `${styles.towers} ${styles.towersAnime}`} \n                        alt = 'img' \n                        src = {towers} \n                        onLoad = {handleLoadImage}\n                        ref = {towersElement}\n                        style = {towersStyle}\n                    />\n                    <img \n                        className = {!animation ? styles.mosque : `${styles.mosque} ${styles.mosqueAnime}`} \n                        alt = 'img' \n                        src = {mosque} \n                        style = {mosqueStyle}\n                        onLoad = {handleLoadImage}\n                        ref = {mosqueElement}\n                    />\n                </div>       \n                <img \n                    className = {!animation ? styles.littleTowers : `${styles.littleTowers} ${styles.littleTowersAnime}`} \n                    alt = 'img' \n                    src = {littleTowers}\n                    style = {littleTowersStyle}\n                    ref = {littleTowersElement}\n                    onLoad = {handleLoadImage}\n                />\n                <div className = {!toggleHeaderFooter ? styles.footer : `${styles.footer} ${styles.footerAnime}`}>\n                    <div onClick = {handleDetails} className = {styles.details}>{lang.main.details}</div>\n                    <div className = {styles.footerLeft}>\n                        <div className = {styles.contactCont}>\n                            <div className = {styles.iconsCont}>\n                                <img className = {styles.icons} src = {phone} alt = 'phone'/>\n                                <a href = ''/>\n                            </div>\n                            <div className = {styles.iconsCont}>\n                                <img className = {styles.icons} src = {email} alt = 'email'/>\n                                <a href = ''/>\n                            </div>\n                            <div className = {styles.iconsCont}>\n                                <img className = {styles.icons} src = {question} alt = 'question'/>\n                                <a href = ''/>\n                            </div>\n                        </div>\n                        <div className = {styles.downloadCont}>\n                            <div>{lang.main.download}</div>\n                            <a href = ''/>\n                            <img className = {styles.icons} src = {download} alt = 'download'/>\n                        </div>\n                    </div>\n                    <div className = {styles.langCont}>\n                        <div>ru</div>\n                        <div>uz</div>\n                        <div>en</div>\n                    </div>\n                </div>\n            </div>}\n        </div>\n        \n    )\n}","/media/javlonbek/extra/projects/reactjs/mavqut/src/pages/main/constants.js",[],"/media/javlonbek/extra/projects/reactjs/mavqut/src/pages/main/animations-functions.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"49"},{"ruleId":"47","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":252,"column":33,"nodeType":"53","endLine":252,"endColumn":47},{"ruleId":"54","severity":1,"message":"55","line":252,"column":33,"nodeType":"53","endLine":252,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":256,"column":33,"nodeType":"53","endLine":256,"endColumn":47},{"ruleId":"54","severity":1,"message":"55","line":256,"column":33,"nodeType":"53","endLine":256,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":260,"column":33,"nodeType":"53","endLine":260,"endColumn":47},{"ruleId":"54","severity":1,"message":"55","line":260,"column":33,"nodeType":"53","endLine":260,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":265,"column":29,"nodeType":"53","endLine":265,"endColumn":43},{"ruleId":"54","severity":1,"message":"55","line":265,"column":29,"nodeType":"53","endLine":265,"endColumn":43},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]